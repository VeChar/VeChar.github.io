<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CentOS 8.3安装桌面并开启VNC</title>
      <link href="58935.html"/>
      <url>58935.html</url>
      
        <content type="html"><![CDATA[<div class='tip' >    <p>1.该操作有时效性或者版本号调整    <p>    <p>2.版本号 CentOS8.3.2011    <p></div>使用该命令查看版本号：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/redhat-release</span><br></pre></td></tr></table></figure><div class='snote link-blue'>    [root@Jy-Dev ~]# cat /etc/redhat-release    <br>    CentOS Linux release 8.3.2011    <br>    [root@Jy-Dev ~]#</div><h2 id="安装桌面-已安装可忽略"><a href="#安装桌面-已安装可忽略" class="headerlink" title="安装桌面(已安装可忽略)"></a>安装桌面(已安装可忽略)</h2><ul><li>安装桌面<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf groupinstall &quot;workstation&quot;</span><br></pre></td></tr></table></figure>或<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf groupinstall &quot;Server with GUI&quot;</span><br></pre></td></tr></table></figure></li><li>设置默认图形桌面<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl set-default graphical</span><br></pre></td></tr></table></figure></li><li>重启系统<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装VNCServer"><a href="#安装VNCServer" class="headerlink" title="安装VNCServer"></a>安装VNCServer</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf -y install tigervnc-server tigervnc-server-module</span><br></pre></td></tr></table></figure><h2 id="配置VNC"><a href="#配置VNC" class="headerlink" title="配置VNC"></a>配置VNC</h2><ul><li>配置密码<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vncpasswd</span><br><span class="line"></span><br><span class="line">Password:</span><br><span class="line">Verify:</span><br><span class="line">Would you like to enter a view-only password (y/n)? n</span><br><span class="line">A view-only password is not used</span><br></pre></td></tr></table></figure></li><li>配置VNC</li></ul><ol><li>编辑配置文件1<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/tigervnc/vncserver.users</span><br></pre></td></tr></table></figure>如果需要root用户连接则新增<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># TigerVNC User assignment</span><br><span class="line">#</span><br><span class="line"># This <span class="keyword">file</span> assigns users <span class="keyword">to</span> specific VNC <span class="keyword">display</span> numbers.</span><br><span class="line"># The <span class="keyword">syntax</span> <span class="keyword">is</span> <span class="symbol">&lt;display&gt;</span>=<span class="symbol">&lt;username&gt;</span>. E.g.:</span><br><span class="line">:<span class="number">1</span>=root</span><br><span class="line"># :<span class="number">2</span>=andrew</span><br><span class="line"># :<span class="number">3</span>=lisa</span><br></pre></td></tr></table></figure></li><li>编辑配置文件2<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim $HOME/.vnc/config</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">session=gnome</span><br><span class="line">geometry=<span class="number">1920</span>x1200</span><br><span class="line">alwaysshared</span><br></pre></td></tr></table></figure></li><li>重新加载配置文件<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure></li><li>启动VNCServer<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start vncserver@:1</span><br></pre></td></tr></table></figure></li><li>查看状态<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status vncserver@:1</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@Jy-Dev ~]# systemctl status vncserver@:<span class="number">1</span></span><br><span class="line">● vncserver@:<span class="number">1</span>.service - Remote desktop service (VNC)</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/vncserver@.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Tue 2020-12-29 08:50:49 CST; 39min ago</span><br><span class="line">  Proces<span class="variable">s:</span> <span class="number">14244</span> ExecStart=/usr/libexec/vncsession-start :<span class="number">1</span> (code=exited, status=<span class="number">0</span>/SUCCESS)</span><br><span class="line"> Main PID: <span class="number">14250</span> (vncsession)</span><br><span class="line">    Task<span class="variable">s:</span> <span class="number">1</span> (limi<span class="variable">t:</span> <span class="number">100718</span>)</span><br><span class="line">   Memory: <span class="number">2.0</span>M</span><br><span class="line">   CGroup: /<span class="built_in">system</span>.slice/<span class="built_in">system</span>-vncserver.slice/vncserver@:<span class="number">1</span>.service</span><br><span class="line">           ‣ <span class="number">14250</span> /usr/sbin/vncsession root :<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">12</span>月 <span class="number">29</span> <span class="number">08</span>:<span class="number">50</span>:<span class="number">49</span> Jy-Dev systemd[<span class="number">1</span>]: Starting Remote desktop service (VNC)...</span><br><span class="line"><span class="number">12</span>月 <span class="number">29</span> <span class="number">08</span>:<span class="number">50</span>:<span class="number">49</span> Jy-Dev systemd[<span class="number">1</span>]: Started Remote desktop service (VNC).</span><br></pre></td></tr></table></figure></li></ol><h2 id="连接访问"><a href="#连接访问" class="headerlink" title="连接访问"></a>连接访问</h2><blockquote><p>mac直接使用屏幕共享工具访问</p></blockquote><ul><li>搜索屏幕共享工具<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/29/7j86Iwy2Vvi4ETh.png"></li><li>使用ip:port方式连接然后输入密码<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/29/2hUTzLqFG7kIfcD.png"></li><li>连接成功<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/29/xczEUvWyJFKtbwG.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 安装文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot,NettySocket.IO,WEBRTC实现WEB端控制移动设备</title>
      <link href="18828.html"/>
      <url>18828.html</url>
      
        <content type="html"><![CDATA[<div class='tip'>    <p>    前言：本文仅提供思路，相关代码不完整披露。    <p></div><h2 id="什么是WEBRTC"><a href="#什么是WEBRTC" class="headerlink" title="什么是WEBRTC?"></a>什么是WEBRTC?</h2><blockquote><p>WEB RTC(Real-Time Communications) 简单点理解就是基于WEB平台的即时多媒体服务。应用譬如：视频会议（P2P），直播，监控，等更多的领域场景。</p></blockquote><h2 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h2><blockquote><p>基于WEBRTC实现WEB端通过DataChannel发送点击，长按，滑动控制等指令操作安卓移动端，移动端实时传回屏幕操作反馈（VideoTrack）。WEB端没有（CreateAnswer）功能，移动端没有发起会话的功能（CreateOffer），即双端相互单向通信（WEB端呼叫移动端，设备自动应答）。</p></blockquote><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><blockquote><p>在实现这个功能时翻阅了不少国内外相关资料，整理如下：<br>开源WEBRTC示例，WEBRTC接口文档（这个开源项目可能是官方提供的最完整的实现了，包含了很多功能，按需查阅）</p></blockquote><ul><li><a href="https://www.w3.org/TR/webrtc/">https://www.w3.org/TR/webrtc/</a></li><li><a href="https://webrtc.github.io/samples/">https://webrtc.github.io/samples/</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebRTC_API">https://developer.mozilla.org/zh-CN/docs/Web/API/WebRTC_API</a></li></ul><blockquote><p>其他文档（很多文档内容都大同小异，思路基本都差不多）：</p></blockquote><ul><li><a href="https://zhuanlan.zhihu.com/p/59520779">https://zhuanlan.zhihu.com/p/59520779</a></li><li><a href="https://juejin.im/post/5cbdc145e51d456e541b4cec">https://juejin.im/post/5cbdc145e51d456e541b4cec</a></li></ul><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><ul><li>后端：SpringBoot 2.x，Netty-Socket.IO 1.7.x，Redis，MySQL</li><li>前端：React，AntDesign，Socket-IO.js</li><li>移动端：Android*</li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><blockquote><p>工作流程主要分为3个端，WEB（控制端），Android（移动端），Signal-Server（信令服务器）。</p></blockquote><h3 id="主要依赖"><a href="#主要依赖" class="headerlink" title="主要依赖"></a>主要依赖</h3><ol><li>控制端项目引入SocketIO.js库，实现WebSocket通信，用来发送操作指令，交互信令等。WEBRTC-adapter用来支持WEBRTC相关功能<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;socket.io-client&quot;: &quot;^2.0.2&quot;,</span><br><span class="line">&quot;socket.io-json-parser&quot;: &quot;^2.1.0&quot;,</span><br><span class="line">&quot;webrtc-adapter&quot;: &quot;^7.2.9&quot;,</span><br></pre></td></tr></table></figure></li><li>Android项目引入google-webrtc以支持WEBRTC相关功能，socket-io实现Socket相关功能<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">implementation &#39;org.webrtc:google-webrtc:1.0.28513&#39;</span><br><span class="line">implementation &#39;io.socket:socket.io-client:1.0.0&#39;</span><br></pre></td></tr></table></figure></li><li>信令服务器项目引入NettySocketIO，实现Socket相关功能<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile group: &#x27;io.socket&#x27;, name: &#x27;socket.io-client&#x27;, version: &#x27;1.0.0&#x27;</span><br></pre></td></tr></table></figure><h3 id="功能实现流程"><a href="#功能实现流程" class="headerlink" title="功能实现流程"></a>功能实现流程</h3></li></ol><ul><li>移动端：移动端设备登陆后，建立Socket连接，获取ICEServer配置信息，Socket.emit通知服务端上线设备上线（心跳维护其在线状态保持在线），同时初始化WEBRTC信息（PeerConnection，MediaStream，DataChannel），服务端记录ClientID及业务ID，并进行映射关系处理，以便WEB端进行业务操作及联机。</li><li>WEB端：查询服务器中在线设备列表，创建Socket连接，服务器记录ClientID并进行映射关系处理，同时返回ICEServer配置信息，此时创建RTCPeerConnection，onicecandidate监听，根据业务ID查询在线设备的Client进行信令交换（信令交换操作会互相发送多次直至完成），完成后发送createOffer的SDP信息给服务端，服务端转发至移动端，移动端接收后响应createAnswer信息到服务端，服务端再转发给WEB端响应，成功后会话联机成功，即可看见安卓设备屏幕信息，WEB端根据屏幕坐标调用OnMouseDown，OnMouseMove，OnMouseUp方法计算点击位置百分比，通过DataChannel发送至移动端，移动端根据点击位置百分比映射点击位置，响应操作。</li><li>服务端：主要作为业务支撑和信令交换提供服务，Client与业务ID映射，用户鉴权（状态维护），缓存等</li></ul><h3 id="核心代码示例"><a href="#核心代码示例" class="headerlink" title="核心代码示例"></a>核心代码示例</h3><h4 id="信令服务器整合Netty-SocketIO服务，心跳处理，信令监听，初始化握手监听。"><a href="#信令服务器整合Netty-SocketIO服务，心跳处理，信令监听，初始化握手监听。" class="headerlink" title="信令服务器整合Netty-SocketIO服务，心跳处理，信令监听，初始化握手监听。"></a>信令服务器整合Netty-SocketIO服务，心跳处理，信令监听，初始化握手监听。</h4><ul><li>Netty-SocketIO服务<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/26/jzQIMYsS6Hbiyde.jpg"></li><li>初始化启动NettySocketIO<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/26/R9gD7zEhKVwULaF.jpg"></li><li>信令监听<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/26/lv4BFKG5Lro1jUq.jpg"></li><li>ICEServer信息<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/26/ieEhs6TwKFlOLaB.jpg"></li><li>端在线状态信息维护的就不放了，根据自己业务实现</li></ul><h4 id="WEB端创建Socket连接，监听onicecandidate，createOffer等信息。"><a href="#WEB端创建Socket连接，监听onicecandidate，createOffer等信息。" class="headerlink" title="WEB端创建Socket连接，监听onicecandidate，createOffer等信息。"></a>WEB端创建Socket连接，监听onicecandidate，createOffer等信息。</h4><ul><li>创建SocketIO实例<br>  <img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/26/yQw3oeGpfuNOSq5.png"></li><li>初始化WEBRTC等相关信息<br>  <img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/26/hKg4Cs7HaGuzWUX.jpg"></li><li>候选指令处理<br>  <img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/26/Bt7ZIeGaAUSPyMC.jpg"></li><li>Answer响应处理<br>  <img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/26/AmwoMuvGLcHI62S.jpg"></li><li>鼠标点击位置比率计算<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/26/q5zGnSXwkOP14vc.jpg"></li></ul><h4 id="STUN-TURN服务器（ICEServer）搭建"><a href="#STUN-TURN服务器（ICEServer）搭建" class="headerlink" title="STUN/TURN服务器（ICEServer）搭建"></a>STUN/TURN服务器（ICEServer）搭建</h4><blockquote><p>开发可以在同一内网测试，无需配置，外网访问具体教程请百度，文章太多了，不赘述。</p></blockquote><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><blockquote><p>开发推荐使用Chrome浏览器，如果开发者需要调用摄像头则需要在新版Chrome中本地需要开启一个配置，Chrome地址栏输入：chrome://flags/ 找到 Insecure origins treated as secure 此列新增调试网址名单，重启浏览器即可配置成功。</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/26/T5Vb387dY2tzJ1L.jpg"></p><h2 id="项目成果示例"><a href="#项目成果示例" class="headerlink" title="项目成果示例"></a>项目成果示例</h2><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/26/ZnFKwp2PHSWTj7A.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/12/26/6yKRAa7nLb5cqFk.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> WEBRTC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> WEBRtc </tag>
            
            <tag> Android </tag>
            
            <tag> Socket.io </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装Jenkins</title>
      <link href="9021.html"/>
      <url>9021.html</url>
      
        <content type="html"><![CDATA[<h2 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull jenkins/jenkins:lts</span><br></pre></td></tr></table></figure><h2 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd -p 9001:8080 -p 50000:50000 \</span><br><span class="line">   --name jenkins --privileged=true \</span><br><span class="line">   -v /Users/vechar/Dev/DevInstall/Docker/jenkins/jenkins_home:/var/jenkins_home \</span><br><span class="line">   -v /Users/vechar/Dev/DevInstall/apache-maven-3.6.3:/usr/local/apache-maven-3.6.3 \</span><br><span class="line">   -v /Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home:/usr/local/1.8.0_201 \</span><br><span class="line">   -v /Users/vechar/Dev/DevInstall/gradle-6.5:/usr/local/gradle-6.5 \</span><br><span class="line">   --env JAVA_OPTS=&quot;-Duser.timezone=GMT+08&quot; \</span><br><span class="line">    jenkins/jenkins:lts</span><br></pre></td></tr></table></figure><div class="note blue simple"><ul><li>指令说明：<br>-v：目录Jenkins_home目录映射，以及把本地的环境映射到容器内</li></ul></div><h2 id="Docker中Jenkins升级"><a href="#Docker中Jenkins升级" class="headerlink" title="Docker中Jenkins升级"></a>Docker中Jenkins升级</h2><pre><code>1.进入 Jenkins 容器在宿主机的挂载目录/home/jenkins中    cd /home/jenkins2.在 CentOS7 中下载Jenkins的最新war包    wget http://mirrors.jenkins.io/war/latest/jenkins.war3.进入容器    docker exec -it -u root +ContainerId bash4.查看容器中jenkins war包的位置，并备份原来的war包    whereis jenkins    cd /usr/share/jenkins    cp jenkins.war jenkinsBAK.war5.将/var/jenkins_home下的包cp到/usr/share/jenkins下覆盖    cp /var/jenkins_home/jenkins.war /usr/share/jenkins/6.退出容器并重启    exit    docker restart +ContainerName</code></pre><h2 id="插件安装提速方案"><a href="#插件安装提速方案" class="headerlink" title="插件安装提速方案"></a>插件安装提速方案</h2><blockquote><p>找到安装目录下的Jenkins\updates\default.json文件，替换 <code>updates.jenkins-ci.org/download</code> 为 <code>mirrors.tuna.tsinghua.edu.cn/jenkins</code>，保存后重启，重新开始安装插件即可</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
          <category> 安装文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装MySQL8</title>
      <link href="1903.html"/>
      <url>1903.html</url>
      
        <content type="html"><![CDATA[<h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:latest</span><br></pre></td></tr></table></figure><h2 id="安装容器"><a href="#安装容器" class="headerlink" title="安装容器"></a>安装容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 3306:3306 --name MySQL \</span><br><span class="line">    --mount type=bind,src=/root/docker/mysql/config/my.cnf,dst=/etc/mysql/my.cnf \</span><br><span class="line">    --mount type=bind,src=/root/docker/mysql/datadir,dst=/var/lib/mysql \</span><br><span class="line">    --mount type=bind,src=/root/docker/mysql/log,dst=/var/log/mysql \</span><br><span class="line">    --mount type=bind,src=/root/docker/mysql/mysql-files,dst=/var/lib/mysql-files/ \</span><br><span class="line">    -e MYSQL_ROOT_PASSWORD=root \</span><br><span class="line">    -d mysql --lower_case_table_names=1</span><br></pre></td></tr></table></figure><div class="note blue simple"><ul><li>指令说明：<br>-v 本地目录映射到容器目录<br>-e MYSQL_ROOT_PASSWORD 指定root用户密码<br>–lower_case_table_names=1 忽略表名大小写的问题</li></ul></div><h2 id="配置远程访问"><a href="#配置远程访问" class="headerlink" title="配置远程访问"></a>配置远程访问</h2><ul><li>修改mysql数据库的user表信息<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">select user,host from user;</span><br></pre></td></tr></table></figure></li><li>修改root用户的访问权限<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user set host=&#x27;%&#x27; where user =&#x27;root&#x27;;</span><br></pre></td></tr></table></figure></li><li>修改密码策略<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;root&#x27;;</span><br></pre></td></tr></table></figure></li><li>授权远程连接<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all on *.* to &#x27;root&#x27;@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure></li><li>刷新配置<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
          <category> 安装文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装Nginx</title>
      <link href="60736.html"/>
      <url>60736.html</url>
      
        <content type="html"><![CDATA[<h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx:latest</span><br></pre></td></tr></table></figure><h2 id="安装容器"><a href="#安装容器" class="headerlink" title="安装容器"></a>安装容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run --name Nginx -p 80:80 -p 443:443 \</span><br><span class="line">-v /root/docker/nginx/conf:/etc/nginx \</span><br><span class="line">-v /root/docker/nginx/cert:/usr/share/nginx/cert \</span><br><span class="line">-v /root/docker/nginx/logs:/var/log/nginx \</span><br><span class="line">-v /root/docker/nginx/html:/usr/share/nginx/html \</span><br><span class="line">-d nginx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
          <category> 安装文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装Redis</title>
      <link href="41794.html"/>
      <url>41794.html</url>
      
        <content type="html"><![CDATA[<h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis </span><br></pre></td></tr></table></figure><h2 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 6379:6379 --name Redis \</span><br><span class="line">-v /Users/vechar/Dev/DevInstall/Docker/redis/conf/redis.conf:/etc/redis/redis.conf \</span><br><span class="line">-v /Users/vechar/Dev/DevInstall/Docker/redis/data:/data \</span><br><span class="line">-d redis redis-server /etc/redis/redis.conf --appendonly yes</span><br></pre></td></tr></table></figure><blockquote><p>注意：配置文件中daemonize no 需要置为no 因为docker需要一个前台进程</p></blockquote><div class="note blue simple"><ul><li>指令说明：<br>-p 6379:6379 端口映射：前表示主机部分，：后表示容器部分<br>–name redis  指定该容器名称，查看和进行操作都比较方便。<br>-v 挂载目录，规则与端口映射相同。<br>-d redis 表示后台启动redis<br>redis-server /etc/redis/redis.conf  以配置文件启动redis，加载容器内的conf文件，最终找到的是挂载的目录/usr/local/docker/redis.conf<br>–appendonly yes  开启redis 持久化</li></ul></div>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
          <category> 安装文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装Nacos</title>
      <link href="12320.html"/>
      <url>12320.html</url>
      
        <content type="html"><![CDATA[<h2 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    -e MODE=standalone \</span><br><span class="line">    -e SPRING_DATASOURCE_PLATFORM=mysql \</span><br><span class="line">    -e MYSQL_SERVICE_HOST=mysql \</span><br><span class="line">    -e MYSQL_SERVICE_PORT=3306 \</span><br><span class="line">    -e MYSQL_SERVICE_USER=root \</span><br><span class="line">    -e MYSQL_SERVICE_PASSWORD=root \</span><br><span class="line">    -e MYSQL_SERVICE_DB_NAME=nacos \</span><br><span class="line">    -v /root/docker/nacos/data/:/home/nacos/data \</span><br><span class="line">    -v /root/docker/nacos/logs/:/home/nacos/logs \</span><br><span class="line">    -p 8848:8848 \</span><br><span class="line">    --name nacos-standalone \</span><br><span class="line">    --restart=always \</span><br><span class="line">     nacos/nacos-server:latest</span><br></pre></td></tr></table></figure><div class="note blue simple"><ul><li>指令说明：<br>单节点模式  MODE=standalone<br>数据库地址  MYSQL_SERVICE_HOST<br>数据库用户名  MYSQL_SERVICE_USER<br>数据库密码  MYSQL_SERVICE_PASSWORD<br>需连接的数据库名称  MYSQL_SERVICE_DB_NAME<br>端口映射  -p  8848:8848</li><li>其他说明：<br>如需要映射容器内nacos/data等目录到宿主机，则先创建相关目录，如果是配置文件的方式启动nacos则需要映射配置文件目录或在容器内修改配置文件</li></ul></div><h2 id="创建网络"><a href="#创建网络" class="headerlink" title="创建网络"></a>创建网络</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create common-net</span><br></pre></td></tr></table></figure><div class="note blue simple"><ul><li>指令说明：<br>docker network create 自定义网络名称</li></ul></div><h2 id="加入网络"><a href="#加入网络" class="headerlink" title="加入网络"></a>加入网络</h2><h3 id="将mysql容器加入到该网络中"><a href="#将mysql容器加入到该网络中" class="headerlink" title="将mysql容器加入到该网络中"></a>将mysql容器加入到该网络中</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network connect common-net mysql</span><br></pre></td></tr></table></figure><h3 id="将nacos容器加入到该网络中"><a href="#将nacos容器加入到该网络中" class="headerlink" title="将nacos容器加入到该网络中"></a>将nacos容器加入到该网络中</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network connect common-net nacos-standalone</span><br></pre></td></tr></table></figure><div class="note blue simple"><ul><li>指令说明：<br>docker network connect 指定网络名称 容器名称</li></ul></div>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
          <category> 安装文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="16107.html"/>
      <url>16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><div class='tip' ><p>默认情况<p></div><div class='tip success'><p>success<p></div><div class='tip error'><p>error<p></div><div class='tip warning'><p>warning<p></div><div class='snote idea'><p>snote idea<p></div><div class='snote primary'><p>snote primary<p></div><div class='snote warning'><p>snote warning<p></div><div class='snote info'><p>snote info<p></div><div class='snote success'><p>snote success<p></div><div class='snote danger'><p>snote danger<p></div><div class='snote bug'><p>snote bug<p></div><div class='snote message'><p>snote message<p></div><div class='snote idea-yellow'><p>snote idea-yellow<p></div><div class='snote todo'><p>snote todo<p></div><div class='snote guide'><p>snote guide<p></div><div class='snote link-blue'><p>snote link<p></div><div class='snote cyan'><p>snote cyan<p></div><div class='snote download'><p>snote download<p></div><div class='snote undo'><p>snote undo<p></div><div class='snote message cyan'><p>snote msg cyan<p></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
